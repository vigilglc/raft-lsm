// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internal_req.proto

package rpcpb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type InternalRequest struct {
	ID    uint64        `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Put   *PutRequest   `protobuf:"bytes,3,opt,name=put,proto3" json:"put,omitempty"`
	Del   *DelRequest   `protobuf:"bytes,4,opt,name=del,proto3" json:"del,omitempty"`
	Write *WriteRequest `protobuf:"bytes,5,opt,name=write,proto3" json:"write,omitempty"`
}

func (m *InternalRequest) Reset()         { *m = InternalRequest{} }
func (m *InternalRequest) String() string { return proto.CompactTextString(m) }
func (*InternalRequest) ProtoMessage()    {}
func (*InternalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41cbac4e1e0b130d, []int{0}
}
func (m *InternalRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InternalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InternalRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InternalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalRequest.Merge(m, src)
}
func (m *InternalRequest) XXX_Size() int {
	return m.Size()
}
func (m *InternalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InternalRequest proto.InternalMessageInfo

func (m *InternalRequest) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *InternalRequest) GetPut() *PutRequest {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *InternalRequest) GetDel() *DelRequest {
	if m != nil {
		return m.Del
	}
	return nil
}

func (m *InternalRequest) GetWrite() *WriteRequest {
	if m != nil {
		return m.Write
	}
	return nil
}

func init() {
	proto.RegisterType((*InternalRequest)(nil), "rpcpb.InternalRequest")
}

func init() { proto.RegisterFile("internal_req.proto", fileDescriptor_41cbac4e1e0b130d) }

var fileDescriptor_41cbac4e1e0b130d = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0x89, 0x2f, 0x4a, 0x2d, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x2d, 0x2a, 0x48, 0x2e, 0x48, 0x92, 0xd2, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce,
	0xcf, 0xd5, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0xcb, 0x26, 0x95, 0xa6, 0x81, 0x79, 0x60, 0x0e,
	0x98, 0x05, 0xd1, 0x25, 0xc5, 0x93, 0x5d, 0x16, 0x5f, 0x54, 0x90, 0x0c, 0xe1, 0x29, 0x4d, 0x63,
	0xe4, 0xe2, 0xf7, 0x84, 0x1a, 0x1d, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0xc4, 0xc7, 0xc5,
	0xe4, 0xe9, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x12, 0xc4, 0xe4, 0xe9, 0x22, 0xa4, 0xcc, 0xc5,
	0x5c, 0x50, 0x5a, 0x22, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0xa8, 0x07, 0xb6, 0x55, 0x2f,
	0xa0, 0xb4, 0x04, 0xaa, 0x3e, 0x08, 0x24, 0x0b, 0x52, 0x94, 0x92, 0x9a, 0x23, 0xc1, 0x82, 0xa2,
	0xc8, 0x25, 0x35, 0x07, 0xae, 0x28, 0x25, 0x35, 0x47, 0x48, 0x93, 0x8b, 0xb5, 0xbc, 0x28, 0xb3,
	0x24, 0x55, 0x82, 0x15, 0xac, 0x4c, 0x18, 0xaa, 0x2c, 0x1c, 0x24, 0x06, 0x53, 0x08, 0x51, 0xe1,
	0x24, 0x71, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0x4e, 0x78,
	0x2c, 0xc7, 0x70, 0xe1, 0xb1, 0x1c, 0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x49, 0x6c, 0x60, 0x97, 0x1b,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x75, 0x8b, 0x17, 0x13, 0x01, 0x00, 0x00,
}

func (m *InternalRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InternalRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InternalRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Write != nil {
		{
			size, err := m.Write.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintInternalReq(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Del != nil {
		{
			size, err := m.Del.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintInternalReq(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Put != nil {
		{
			size, err := m.Put.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintInternalReq(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.ID != 0 {
		i = encodeVarintInternalReq(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintInternalReq(dAtA []byte, offset int, v uint64) int {
	offset -= sovInternalReq(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *InternalRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovInternalReq(uint64(m.ID))
	}
	if m.Put != nil {
		l = m.Put.Size()
		n += 1 + l + sovInternalReq(uint64(l))
	}
	if m.Del != nil {
		l = m.Del.Size()
		n += 1 + l + sovInternalReq(uint64(l))
	}
	if m.Write != nil {
		l = m.Write.Size()
		n += 1 + l + sovInternalReq(uint64(l))
	}
	return n
}

func sovInternalReq(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozInternalReq(x uint64) (n int) {
	return sovInternalReq(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *InternalRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInternalReq
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InternalRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InternalRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInternalReq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Put", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInternalReq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInternalReq
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthInternalReq
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Put == nil {
				m.Put = &PutRequest{}
			}
			if err := m.Put.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Del", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInternalReq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInternalReq
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthInternalReq
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Del == nil {
				m.Del = &DelRequest{}
			}
			if err := m.Del.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Write", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInternalReq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInternalReq
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthInternalReq
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Write == nil {
				m.Write = &WriteRequest{}
			}
			if err := m.Write.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInternalReq(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthInternalReq
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipInternalReq(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowInternalReq
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInternalReq
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInternalReq
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthInternalReq
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupInternalReq
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthInternalReq
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthInternalReq        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowInternalReq          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupInternalReq = fmt.Errorf("proto: unexpected end of group")
)
